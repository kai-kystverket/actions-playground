name: Deploy
on:
  push:
    branches:
      - main
    paths:
      - shared/**
      - backend/**
  pull_request:
    types:
      - opened
      - edited
  release:
    types:
      - published
  workflow_dispatch:
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.changes.outputs.changes }}
      mock: ${{ steps.changes-mock.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request' #no need to check out pull requests
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        if: github.event_name != 'release'
        id: changes
        with:
          filters: |
            frontend-a:
              - 'shared/frontend-a/**'
              - 'shared/*'
            frontend-b:
              - 'shared/frontend-b/**'
              - 'shared/*'
            backend:
              - 'backend/**'
      - name: mock dorny/paths-filter
        id: changes-mock
        run: |
          echo changes='["frontend-a","backend"]' >> $GITHUB_OUTPUT
  deploy:
    needs: changes
    if: ${{ needs.changes.outputs.services != '' && toJson(fromJson(needs.changes.outputs.services)) != '[]' }}
    strategy:
      matrix:
        service: ${{ fromJSON(needs.changes.outputs.services) }}
    uses: ./.github/workflows/reusable-build.yaml
    with:
      context: ${{ matrix.service }}
      release: ${{ github.event_name == 'release' }}
      pull_request: ${{ github.event_name == 'pull_request'}}
  # notify:
  # needs: deploy
  # runs-on: ubuntu-latest
  # if: github.event_name == 'release'
  # steps:
  #   - run: echo deploy complete, run notify webhook
